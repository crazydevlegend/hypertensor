
//! Autogenerated weights for `pallet_network`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-07-12, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `iMac.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/hypertensor-node
// benchmark
// pallet
// --chain
// dev
// --wasm-execution
// compiled
// --pallet
// pallet_network
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// pallets/network/src/weights.rs
// --template
// ./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_network`.
pub trait WeightInfo {
	fn add_model() -> Weight;
	fn add_model_peer() -> Weight;
	fn update_model_peer() -> Weight;
	fn remove_model_peer() -> Weight;
	fn update_port() -> Weight;
	fn add_to_stake() -> Weight;
	fn remove_stake() -> Weight;
	fn submit_consensus_data() -> Weight;
	fn unconfirm_consensus_data() -> Weight;
	fn form_consensus_data() -> Weight;
	fn generate_emissions_max_model() -> Weight;
	fn generate_emissions_emissions_weights() -> Weight;
	fn form_consensus_no_consensus_weight_test() -> Weight;
}

/// Weights for `pallet_network` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Network::ModelPaths` (r:1 w:1)
	/// Proof: `Network::ModelPaths` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelActivated` (r:1 w:0)
	/// Proof: `Network::ModelActivated` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:1)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModels` (r:1 w:0)
	/// Proof: `Network::MaxModels` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusInclusionEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusInclusionEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPerPeerInitCost` (r:1 w:0)
	/// Proof: `Network::ModelPerPeerInitCost` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModels` (r:1 w:1)
	/// Proof: `Network::TotalModels` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn add_model() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `113`
		//  Estimated: `3578`
		// Minimum execution time: 26_000_000 picoseconds.
		Weight::from_parts(27_000_000, 3578)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxAccountPenaltyCount` (r:1 w:0)
	/// Proof: `Network::MaxAccountPenaltyCount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountPenaltyCount` (r:1 w:0)
	/// Proof: `Network::AccountPenaltyCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelPeers` (r:1 w:1)
	/// Proof: `Network::TotalModelPeers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModelPeers` (r:1 w:0)
	/// Proof: `Network::MaxModelPeers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:1)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerAccount` (r:1 w:1)
	/// Proof: `Network::ModelPeerAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModelStake` (r:1 w:1)
	/// Proof: `Network::AccountModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinStakeBalance` (r:1 w:0)
	/// Proof: `Network::MinStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxStakeBalance` (r:1 w:0)
	/// Proof: `Network::MaxStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::LastTxBlock` (r:1 w:1)
	/// Proof: `Network::LastTxBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TxRateLimit` (r:1 w:0)
	/// Proof: `Network::TxRateLimit` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalAccountStake` (r:1 w:1)
	/// Proof: `Network::TotalAccountStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelStake` (r:1 w:1)
	/// Proof: `Network::TotalModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalStake` (r:1 w:1)
	/// Proof: `Network::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelAccount` (r:1 w:1)
	/// Proof: `Network::ModelAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModels` (r:1 w:1)
	/// Proof: `Network::AccountModels` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn add_model_peer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `462`
		//  Estimated: `3927`
		// Minimum execution time: 66_000_000 picoseconds.
		Weight::from_parts(69_000_000, 3927)
			.saturating_add(T::DbWeight::get().reads(18_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:1)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerAccount` (r:1 w:1)
	/// Proof: `Network::ModelPeerAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::RemoveModelPeerEpochPercentage` (r:1 w:0)
	/// Proof: `Network::RemoveModelPeerEpochPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_model_peer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `787`
		//  Estimated: `4252`
		// Minimum execution time: 26_000_000 picoseconds.
		Weight::from_parts(27_000_000, 4252)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:1)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusInclusionEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusInclusionEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelAccount` (r:1 w:1)
	/// Proof: `Network::ModelAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelPeers` (r:1 w:1)
	/// Proof: `Network::TotalModelPeers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModels` (r:1 w:1)
	/// Proof: `Network::AccountModels` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochUnconfirmed` (r:0 w:1)
	/// Proof: `Network::PeerConsensusEpochUnconfirmed` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusResults` (r:0 w:1)
	/// Proof: `Network::ModelPeerConsensusResults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerAccount` (r:0 w:1)
	/// Proof: `Network::ModelPeerAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsecutiveConsensusSent` (r:0 w:1)
	/// Proof: `Network::ModelPeerConsecutiveConsensusSent` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochSubmitted` (r:0 w:1)
	/// Proof: `Network::PeerConsensusEpochSubmitted` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsecutiveConsensusNotSent` (r:0 w:1)
	/// Proof: `Network::ModelPeerConsecutiveConsensusNotSent` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn remove_model_peer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `744`
		//  Estimated: `4209`
		// Minimum execution time: 40_000_000 picoseconds.
		Weight::from_parts(42_000_000, 4209)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:1)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_port() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `601`
		//  Estimated: `4066`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(13_000_000, 4066)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModelStake` (r:1 w:1)
	/// Proof: `Network::AccountModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinStakeBalance` (r:1 w:0)
	/// Proof: `Network::MinStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxStakeBalance` (r:1 w:0)
	/// Proof: `Network::MaxStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::LastTxBlock` (r:1 w:1)
	/// Proof: `Network::LastTxBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TxRateLimit` (r:1 w:0)
	/// Proof: `Network::TxRateLimit` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalAccountStake` (r:1 w:1)
	/// Proof: `Network::TotalAccountStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelStake` (r:1 w:1)
	/// Proof: `Network::TotalModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalStake` (r:1 w:1)
	/// Proof: `Network::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn add_to_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1037`
		//  Estimated: `4502`
		// Minimum execution time: 54_000_000 picoseconds.
		Weight::from_parts(56_000_000, 4502)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Network::ModelAccount` (r:1 w:0)
	/// Proof: `Network::ModelAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredUnstakeEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredUnstakeEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModelStake` (r:1 w:1)
	/// Proof: `Network::AccountModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinStakeBalance` (r:1 w:0)
	/// Proof: `Network::MinStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::LastTxBlock` (r:1 w:1)
	/// Proof: `Network::LastTxBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TxRateLimit` (r:1 w:0)
	/// Proof: `Network::TxRateLimit` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalAccountStake` (r:1 w:1)
	/// Proof: `Network::TotalAccountStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalStake` (r:1 w:1)
	/// Proof: `Network::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelStake` (r:1 w:1)
	/// Proof: `Network::TotalModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn remove_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1125`
		//  Estimated: `4590`
		// Minimum execution time: 55_000_000 picoseconds.
		Weight::from_parts(55_000_000, 4590)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxAccountPenaltyCount` (r:1 w:0)
	/// Proof: `Network::MaxAccountPenaltyCount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountPenaltyCount` (r:96 w:0)
	/// Proof: `Network::AccountPenaltyCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::RemoveModelPeerEpochPercentage` (r:1 w:0)
	/// Proof: `Network::RemoveModelPeerEpochPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:97 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelPeers` (r:1 w:0)
	/// Proof: `Network::TotalModelPeers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochSubmitted` (r:1 w:1)
	/// Proof: `Network::PeerConsensusEpochSubmitted` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredModelConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredModelConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinModelPeers` (r:1 w:0)
	/// Proof: `Network::MinModelPeers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusInclusionEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusInclusionEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusResults` (r:96 w:96)
	/// Proof: `Network::ModelPeerConsensusResults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochUnconfirmed` (r:1 w:0)
	/// Proof: `Network::PeerConsensusEpochUnconfirmed` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelTotalConsensusSubmits` (r:1 w:1)
	/// Proof: `Network::ModelTotalConsensusSubmits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusEpochSubmitCount` (r:1 w:1)
	/// Proof: `Network::ModelConsensusEpochSubmitCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_consensus_data() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15964`
		//  Estimated: `257029`
		// Minimum execution time: 1_977_000_000 picoseconds.
		Weight::from_parts(1_988_000_000, 257029)
			.saturating_add(T::DbWeight::get().reads(302_u64))
			.saturating_add(T::DbWeight::get().writes(99_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::RemoveModelPeerEpochPercentage` (r:1 w:0)
	/// Proof: `Network::RemoveModelPeerEpochPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:97 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredModelConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredModelConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinModelPeers` (r:1 w:0)
	/// Proof: `Network::MinModelPeers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochUnconfirmed` (r:1 w:1)
	/// Proof: `Network::PeerConsensusEpochUnconfirmed` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochSubmitted` (r:1 w:0)
	/// Proof: `Network::PeerConsensusEpochSubmitted` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelTotalConsensusSubmits` (r:1 w:1)
	/// Proof: `Network::ModelTotalConsensusSubmits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusEpochUnconfirmedCount` (r:1 w:1)
	/// Proof: `Network::ModelConsensusEpochUnconfirmedCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn unconfirm_consensus_data() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `16431`
		//  Estimated: `257496`
		// Minimum execution time: 373_000_000 picoseconds.
		Weight::from_parts(379_000_000, 257496)
			.saturating_add(T::DbWeight::get().reads(107_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaximumOutlierDeltaPercent` (r:1 w:0)
	/// Proof: `Network::MaximumOutlierDeltaPercent` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusSubmitPercentRequirement` (r:1 w:0)
	/// Proof: `Network::ModelPeerConsensusSubmitPercentRequirement` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModelConsensusEpochsErrors` (r:1 w:0)
	/// Proof: `Network::MaxModelConsensusEpochsErrors` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredModelConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredModelConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusUnconfirmedThreshold` (r:1 w:0)
	/// Proof: `Network::ModelConsensusUnconfirmedThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsecutiveConsensusSentThreshold` (r:1 w:0)
	/// Proof: `Network::ModelPeerConsecutiveConsensusSentThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsecutiveEpochsThreshold` (r:1 w:0)
	/// Proof: `Network::ModelConsecutiveEpochsThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerAgainstConsensusRemovalThreshold` (r:1 w:0)
	/// Proof: `Network::PeerAgainstConsensusRemovalThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModelConsensusUnconfirmedConsecutiveEpochs` (r:1 w:0)
	/// Proof: `Network::MaxModelConsensusUnconfirmedConsecutiveEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerRemovalThreshold` (r:1 w:0)
	/// Proof: `Network::PeerRemovalThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:33 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusEpochsErrors` (r:32 w:0)
	/// Proof: `Network::ModelConsensusEpochsErrors` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelTotalConsensusSubmits` (r:32 w:32)
	/// Proof: `Network::ModelTotalConsensusSubmits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:3104 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusEpochUnconfirmedCount` (r:32 w:32)
	/// Proof: `Network::ModelConsensusEpochUnconfirmedCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusUnconfirmedConsecutiveEpochsCount` (r:32 w:0)
	/// Proof: `Network::ModelConsensusUnconfirmedConsecutiveEpochsCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusEpochSubmitCount` (r:32 w:32)
	/// Proof: `Network::ModelConsensusEpochSubmitCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsecutiveSuccessfulEpochs` (r:32 w:32)
	/// Proof: `Network::ModelConsecutiveSuccessfulEpochs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusResults` (r:3104 w:3072)
	/// Proof: `Network::ModelPeerConsensusResults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochSubmitted` (r:3072 w:3072)
	/// Proof: `Network::PeerConsensusEpochSubmitted` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochUnconfirmed` (r:3072 w:0)
	/// Proof: `Network::PeerConsensusEpochUnconfirmed` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsecutiveConsensusSent` (r:3072 w:3072)
	/// Proof: `Network::ModelPeerConsecutiveConsensusSent` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsecutiveConsensusNotSent` (r:3072 w:3072)
	/// Proof: `Network::ModelPeerConsecutiveConsensusNotSent` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxAccountPenaltyCount` (r:1 w:0)
	/// Proof: `Network::MaxAccountPenaltyCount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountPenaltyCount` (r:96 w:0)
	/// Proof: `Network::AccountPenaltyCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsInConsensus` (r:1 w:1)
	/// Proof: `Network::ModelsInConsensus` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn form_consensus_data() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15195268`
		//  Estimated: `22878658`
		// Minimum execution time: 137_952_000_000 picoseconds.
		Weight::from_parts(140_488_000_000, 22878658)
			.saturating_add(T::DbWeight::get().reads(18831_u64))
			.saturating_add(T::DbWeight::get().writes(12417_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxStakeBalance` (r:1 w:0)
	/// Proof: `Network::MaxStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsInConsensus` (r:1 w:1)
	/// Proof: `Network::ModelsInConsensus` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusResults` (r:3105 w:3072)
	/// Proof: `Network::ModelPeerConsensusResults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModelStake` (r:3072 w:3072)
	/// Proof: `Network::AccountModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::StakeVaultBalance` (r:1 w:1)
	/// Proof: `Network::StakeVaultBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::StakeRewardWeight` (r:1 w:0)
	/// Proof: `Network::StakeRewardWeight` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModelRewardsWeight` (r:1 w:0)
	/// Proof: `Network::MaxModelRewardsWeight` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalAccountStake` (r:96 w:96)
	/// Proof: `Network::TotalAccountStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelStake` (r:32 w:32)
	/// Proof: `Network::TotalModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalStake` (r:1 w:1)
	/// Proof: `Network::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn generate_emissions_max_model() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14712436`
		//  Estimated: `22398301`
		// Minimum execution time: 83_661_000_000 picoseconds.
		Weight::from_parts(88_935_000_000, 22398301)
			.saturating_add(T::DbWeight::get().reads(6312_u64))
			.saturating_add(T::DbWeight::get().writes(6275_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxStakeBalance` (r:1 w:0)
	/// Proof: `Network::MaxStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsInConsensus` (r:1 w:1)
	/// Proof: `Network::ModelsInConsensus` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusResults` (r:3105 w:3072)
	/// Proof: `Network::ModelPeerConsensusResults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModelStake` (r:3072 w:3072)
	/// Proof: `Network::AccountModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::StakeVaultBalance` (r:1 w:1)
	/// Proof: `Network::StakeVaultBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::StakeRewardWeight` (r:1 w:0)
	/// Proof: `Network::StakeRewardWeight` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModelRewardsWeight` (r:1 w:0)
	/// Proof: `Network::MaxModelRewardsWeight` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalAccountStake` (r:96 w:96)
	/// Proof: `Network::TotalAccountStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelStake` (r:32 w:32)
	/// Proof: `Network::TotalModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalStake` (r:1 w:1)
	/// Proof: `Network::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn generate_emissions_emissions_weights() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14712436`
		//  Estimated: `22398301`
		// Minimum execution time: 83_225_000_000 picoseconds.
		Weight::from_parts(87_903_000_000, 22398301)
			.saturating_add(T::DbWeight::get().reads(6312_u64))
			.saturating_add(T::DbWeight::get().writes(6275_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn form_consensus_no_consensus_weight_test() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `1527`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_000_000, 1527)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Network::ModelPaths` (r:1 w:1)
	/// Proof: `Network::ModelPaths` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelActivated` (r:1 w:0)
	/// Proof: `Network::ModelActivated` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:1)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModels` (r:1 w:0)
	/// Proof: `Network::MaxModels` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusInclusionEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusInclusionEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPerPeerInitCost` (r:1 w:0)
	/// Proof: `Network::ModelPerPeerInitCost` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModels` (r:1 w:1)
	/// Proof: `Network::TotalModels` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn add_model() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `113`
		//  Estimated: `3578`
		// Minimum execution time: 26_000_000 picoseconds.
		Weight::from_parts(27_000_000, 3578)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxAccountPenaltyCount` (r:1 w:0)
	/// Proof: `Network::MaxAccountPenaltyCount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountPenaltyCount` (r:1 w:0)
	/// Proof: `Network::AccountPenaltyCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelPeers` (r:1 w:1)
	/// Proof: `Network::TotalModelPeers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModelPeers` (r:1 w:0)
	/// Proof: `Network::MaxModelPeers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:1)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerAccount` (r:1 w:1)
	/// Proof: `Network::ModelPeerAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModelStake` (r:1 w:1)
	/// Proof: `Network::AccountModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinStakeBalance` (r:1 w:0)
	/// Proof: `Network::MinStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxStakeBalance` (r:1 w:0)
	/// Proof: `Network::MaxStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::LastTxBlock` (r:1 w:1)
	/// Proof: `Network::LastTxBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TxRateLimit` (r:1 w:0)
	/// Proof: `Network::TxRateLimit` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalAccountStake` (r:1 w:1)
	/// Proof: `Network::TotalAccountStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelStake` (r:1 w:1)
	/// Proof: `Network::TotalModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalStake` (r:1 w:1)
	/// Proof: `Network::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelAccount` (r:1 w:1)
	/// Proof: `Network::ModelAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModels` (r:1 w:1)
	/// Proof: `Network::AccountModels` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn add_model_peer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `462`
		//  Estimated: `3927`
		// Minimum execution time: 66_000_000 picoseconds.
		Weight::from_parts(69_000_000, 3927)
			.saturating_add(RocksDbWeight::get().reads(18_u64))
			.saturating_add(RocksDbWeight::get().writes(10_u64))
	}
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:1)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerAccount` (r:1 w:1)
	/// Proof: `Network::ModelPeerAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::RemoveModelPeerEpochPercentage` (r:1 w:0)
	/// Proof: `Network::RemoveModelPeerEpochPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_model_peer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `787`
		//  Estimated: `4252`
		// Minimum execution time: 26_000_000 picoseconds.
		Weight::from_parts(27_000_000, 4252)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:1)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusInclusionEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusInclusionEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelAccount` (r:1 w:1)
	/// Proof: `Network::ModelAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelPeers` (r:1 w:1)
	/// Proof: `Network::TotalModelPeers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModels` (r:1 w:1)
	/// Proof: `Network::AccountModels` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochUnconfirmed` (r:0 w:1)
	/// Proof: `Network::PeerConsensusEpochUnconfirmed` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusResults` (r:0 w:1)
	/// Proof: `Network::ModelPeerConsensusResults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerAccount` (r:0 w:1)
	/// Proof: `Network::ModelPeerAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsecutiveConsensusSent` (r:0 w:1)
	/// Proof: `Network::ModelPeerConsecutiveConsensusSent` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochSubmitted` (r:0 w:1)
	/// Proof: `Network::PeerConsensusEpochSubmitted` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsecutiveConsensusNotSent` (r:0 w:1)
	/// Proof: `Network::ModelPeerConsecutiveConsensusNotSent` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn remove_model_peer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `744`
		//  Estimated: `4209`
		// Minimum execution time: 40_000_000 picoseconds.
		Weight::from_parts(42_000_000, 4209)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(10_u64))
	}
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:1)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_port() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `601`
		//  Estimated: `4066`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(13_000_000, 4066)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModelStake` (r:1 w:1)
	/// Proof: `Network::AccountModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinStakeBalance` (r:1 w:0)
	/// Proof: `Network::MinStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxStakeBalance` (r:1 w:0)
	/// Proof: `Network::MaxStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::LastTxBlock` (r:1 w:1)
	/// Proof: `Network::LastTxBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TxRateLimit` (r:1 w:0)
	/// Proof: `Network::TxRateLimit` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalAccountStake` (r:1 w:1)
	/// Proof: `Network::TotalAccountStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelStake` (r:1 w:1)
	/// Proof: `Network::TotalModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalStake` (r:1 w:1)
	/// Proof: `Network::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn add_to_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1037`
		//  Estimated: `4502`
		// Minimum execution time: 54_000_000 picoseconds.
		Weight::from_parts(56_000_000, 4502)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Network::ModelAccount` (r:1 w:0)
	/// Proof: `Network::ModelAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredUnstakeEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredUnstakeEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:1 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModelStake` (r:1 w:1)
	/// Proof: `Network::AccountModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinStakeBalance` (r:1 w:0)
	/// Proof: `Network::MinStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::LastTxBlock` (r:1 w:1)
	/// Proof: `Network::LastTxBlock` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TxRateLimit` (r:1 w:0)
	/// Proof: `Network::TxRateLimit` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalAccountStake` (r:1 w:1)
	/// Proof: `Network::TotalAccountStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalStake` (r:1 w:1)
	/// Proof: `Network::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelStake` (r:1 w:1)
	/// Proof: `Network::TotalModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn remove_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1125`
		//  Estimated: `4590`
		// Minimum execution time: 55_000_000 picoseconds.
		Weight::from_parts(55_000_000, 4590)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxAccountPenaltyCount` (r:1 w:0)
	/// Proof: `Network::MaxAccountPenaltyCount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountPenaltyCount` (r:96 w:0)
	/// Proof: `Network::AccountPenaltyCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::RemoveModelPeerEpochPercentage` (r:1 w:0)
	/// Proof: `Network::RemoveModelPeerEpochPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:97 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelPeers` (r:1 w:0)
	/// Proof: `Network::TotalModelPeers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochSubmitted` (r:1 w:1)
	/// Proof: `Network::PeerConsensusEpochSubmitted` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredModelConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredModelConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinModelPeers` (r:1 w:0)
	/// Proof: `Network::MinModelPeers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusInclusionEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusInclusionEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusResults` (r:96 w:96)
	/// Proof: `Network::ModelPeerConsensusResults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochUnconfirmed` (r:1 w:0)
	/// Proof: `Network::PeerConsensusEpochUnconfirmed` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelTotalConsensusSubmits` (r:1 w:1)
	/// Proof: `Network::ModelTotalConsensusSubmits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusEpochSubmitCount` (r:1 w:1)
	/// Proof: `Network::ModelConsensusEpochSubmitCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_consensus_data() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15964`
		//  Estimated: `257029`
		// Minimum execution time: 1_977_000_000 picoseconds.
		Weight::from_parts(1_988_000_000, 257029)
			.saturating_add(RocksDbWeight::get().reads(302_u64))
			.saturating_add(RocksDbWeight::get().writes(99_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::RemoveModelPeerEpochPercentage` (r:1 w:0)
	/// Proof: `Network::RemoveModelPeerEpochPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:1 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:97 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredModelConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredModelConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinModelPeers` (r:1 w:0)
	/// Proof: `Network::MinModelPeers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochUnconfirmed` (r:1 w:1)
	/// Proof: `Network::PeerConsensusEpochUnconfirmed` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochSubmitted` (r:1 w:0)
	/// Proof: `Network::PeerConsensusEpochSubmitted` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelTotalConsensusSubmits` (r:1 w:1)
	/// Proof: `Network::ModelTotalConsensusSubmits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusEpochUnconfirmedCount` (r:1 w:1)
	/// Proof: `Network::ModelConsensusEpochUnconfirmedCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn unconfirm_consensus_data() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `16431`
		//  Estimated: `257496`
		// Minimum execution time: 373_000_000 picoseconds.
		Weight::from_parts(379_000_000, 257496)
			.saturating_add(RocksDbWeight::get().reads(107_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaximumOutlierDeltaPercent` (r:1 w:0)
	/// Proof: `Network::MaximumOutlierDeltaPercent` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusSubmitPercentRequirement` (r:1 w:0)
	/// Proof: `Network::ModelPeerConsensusSubmitPercentRequirement` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModelConsensusEpochsErrors` (r:1 w:0)
	/// Proof: `Network::MaxModelConsensusEpochsErrors` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredModelConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredModelConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusUnconfirmedThreshold` (r:1 w:0)
	/// Proof: `Network::ModelConsensusUnconfirmedThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsecutiveConsensusSentThreshold` (r:1 w:0)
	/// Proof: `Network::ModelPeerConsecutiveConsensusSentThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MinRequiredPeerConsensusSubmitEpochs` (r:1 w:0)
	/// Proof: `Network::MinRequiredPeerConsensusSubmitEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsecutiveEpochsThreshold` (r:1 w:0)
	/// Proof: `Network::ModelConsecutiveEpochsThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerAgainstConsensusRemovalThreshold` (r:1 w:0)
	/// Proof: `Network::PeerAgainstConsensusRemovalThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModelConsensusUnconfirmedConsecutiveEpochs` (r:1 w:0)
	/// Proof: `Network::MaxModelConsensusUnconfirmedConsecutiveEpochs` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerRemovalThreshold` (r:1 w:0)
	/// Proof: `Network::PeerRemovalThreshold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsData` (r:33 w:0)
	/// Proof: `Network::ModelsData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusEpochsErrors` (r:32 w:0)
	/// Proof: `Network::ModelConsensusEpochsErrors` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelTotalConsensusSubmits` (r:32 w:32)
	/// Proof: `Network::ModelTotalConsensusSubmits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeersData` (r:3104 w:0)
	/// Proof: `Network::ModelPeersData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusEpochUnconfirmedCount` (r:32 w:32)
	/// Proof: `Network::ModelConsensusEpochUnconfirmedCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusUnconfirmedConsecutiveEpochsCount` (r:32 w:0)
	/// Proof: `Network::ModelConsensusUnconfirmedConsecutiveEpochsCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsensusEpochSubmitCount` (r:32 w:32)
	/// Proof: `Network::ModelConsensusEpochSubmitCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelConsecutiveSuccessfulEpochs` (r:32 w:32)
	/// Proof: `Network::ModelConsecutiveSuccessfulEpochs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusResults` (r:3104 w:3072)
	/// Proof: `Network::ModelPeerConsensusResults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochSubmitted` (r:3072 w:3072)
	/// Proof: `Network::PeerConsensusEpochSubmitted` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::PeerConsensusEpochUnconfirmed` (r:3072 w:0)
	/// Proof: `Network::PeerConsensusEpochUnconfirmed` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsecutiveConsensusSent` (r:3072 w:3072)
	/// Proof: `Network::ModelPeerConsecutiveConsensusSent` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsecutiveConsensusNotSent` (r:3072 w:3072)
	/// Proof: `Network::ModelPeerConsecutiveConsensusNotSent` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxAccountPenaltyCount` (r:1 w:0)
	/// Proof: `Network::MaxAccountPenaltyCount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountPenaltyCount` (r:96 w:0)
	/// Proof: `Network::AccountPenaltyCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsInConsensus` (r:1 w:1)
	/// Proof: `Network::ModelsInConsensus` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn form_consensus_data() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15195268`
		//  Estimated: `22878658`
		// Minimum execution time: 137_952_000_000 picoseconds.
		Weight::from_parts(140_488_000_000, 22878658)
			.saturating_add(RocksDbWeight::get().reads(18831_u64))
			.saturating_add(RocksDbWeight::get().writes(12417_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxStakeBalance` (r:1 w:0)
	/// Proof: `Network::MaxStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsInConsensus` (r:1 w:1)
	/// Proof: `Network::ModelsInConsensus` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusResults` (r:3105 w:3072)
	/// Proof: `Network::ModelPeerConsensusResults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModelStake` (r:3072 w:3072)
	/// Proof: `Network::AccountModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::StakeVaultBalance` (r:1 w:1)
	/// Proof: `Network::StakeVaultBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::StakeRewardWeight` (r:1 w:0)
	/// Proof: `Network::StakeRewardWeight` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModelRewardsWeight` (r:1 w:0)
	/// Proof: `Network::MaxModelRewardsWeight` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalAccountStake` (r:96 w:96)
	/// Proof: `Network::TotalAccountStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelStake` (r:32 w:32)
	/// Proof: `Network::TotalModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalStake` (r:1 w:1)
	/// Proof: `Network::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn generate_emissions_max_model() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14712436`
		//  Estimated: `22398301`
		// Minimum execution time: 83_661_000_000 picoseconds.
		Weight::from_parts(88_935_000_000, 22398301)
			.saturating_add(RocksDbWeight::get().reads(6312_u64))
			.saturating_add(RocksDbWeight::get().writes(6275_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxStakeBalance` (r:1 w:0)
	/// Proof: `Network::MaxStakeBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelsInConsensus` (r:1 w:1)
	/// Proof: `Network::ModelsInConsensus` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::ModelPeerConsensusResults` (r:3105 w:3072)
	/// Proof: `Network::ModelPeerConsensusResults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::AccountModelStake` (r:3072 w:3072)
	/// Proof: `Network::AccountModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::StakeVaultBalance` (r:1 w:1)
	/// Proof: `Network::StakeVaultBalance` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::StakeRewardWeight` (r:1 w:0)
	/// Proof: `Network::StakeRewardWeight` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::MaxModelRewardsWeight` (r:1 w:0)
	/// Proof: `Network::MaxModelRewardsWeight` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalAccountStake` (r:96 w:96)
	/// Proof: `Network::TotalAccountStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalModelStake` (r:32 w:32)
	/// Proof: `Network::TotalModelStake` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Network::TotalStake` (r:1 w:1)
	/// Proof: `Network::TotalStake` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn generate_emissions_emissions_weights() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `14712436`
		//  Estimated: `22398301`
		// Minimum execution time: 83_225_000_000 picoseconds.
		Weight::from_parts(87_903_000_000, 22398301)
			.saturating_add(RocksDbWeight::get().reads(6312_u64))
			.saturating_add(RocksDbWeight::get().writes(6275_u64))
	}
	/// Storage: `Network::ConsensusBlocksInterval` (r:1 w:0)
	/// Proof: `Network::ConsensusBlocksInterval` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn form_consensus_no_consensus_weight_test() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `1527`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_000_000, 1527)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
}
